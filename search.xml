<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Windows系统MySQL多版本主从安装</title>
    <url>/2022/01/08/cdc-study/</url>
    <content><![CDATA[<p>最近在做CDC的学习,由于没有完整的linux环境,只能在Windows下安装mysql主从来学习了,安装流程记录在此</p>
<span id="more"></span>
<h3 id="说在前面的话"><a href="#说在前面的话" class="headerlink" title="说在前面的话"></a>说在前面的话</h3><p>目前所在公司的数据同步架构体系中,个人感觉存在一些弯弯绕绕的地方.所幸在B站学习Canal的时候,了解到一款Flink-CDC技术,大致看了一下对此很感兴趣,遂准备学习一下,但是需要一定的mysql环境,所以在window下安装mysql环境来学习</p>
<h3 id="mysql-安装"><a href="#mysql-安装" class="headerlink" title="mysql 安装"></a>mysql 安装</h3><p>目前我是准备了两个的版本的mysql用于搭建一个主从环境来学习,我这里是下载了同公司正在使用的版本(5.7.16),一个正在学习的8.0.18版本,安装包直接在mysql官网下载的社区版window-installer安装.这里的安装流程就跳过了,即使后续安装有问题或使用起来版本有问题,也可以随时卸载再安装,本人亲测</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 主库5.7.16 开启binlog</span><br><span class="line">log-bin=mysql-bin # 开启 binlog</span><br><span class="line">binlog-format=ROW # 选择 ROW 模式</span><br><span class="line"># mysql5.7是中划线,8.0中是下划线</span><br><span class="line">server-id=1 # 配置 MySQL replaction 需要定义，需要保证唯一</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 从库8.0.18开启binlog</span><br><span class="line">log-bin=mysql-bin # 开启 binlog</span><br><span class="line">binlog-format=ROW # 选择 ROW 模式</span><br><span class="line"># mysql5.7是中划线,8.0中是下划线</span><br><span class="line">server_id=2 # 配置 MySQL replaction 需要定义，需要保证唯一</span><br><span class="line"># 开启row_data_meta,window 可以在workbrench控制</span><br><span class="line">binlog_row_metadata = FULL</span><br></pre></td></tr></table></figure>
<p><em><strong>上面这些配置处理好以后,记得需要重启一些</strong></em></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"># 这里是指定master,我这里的环境是<span class="number">80</span>版本是从,所以<span class="number">57</span>版本的是主,他的tcp端口是<span class="number">3305</span></span><br><span class="line">CHANGE MASTER <span class="keyword">TO</span> MASTER_HOST <span class="operator">=</span> <span class="string">&#x27;127.0.0.1&#x27;</span>,</span><br><span class="line">MASTER_PORT <span class="operator">=</span> <span class="number">3305</span>,</span><br><span class="line">MASTER_USER <span class="operator">=</span> <span class="string">&#x27;mysql57_read&#x27;</span>,</span><br><span class="line">MASTER_PASSWORD <span class="operator">=</span> <span class="string">&#x27;123456&#x27;</span>;</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 查看binlog状态</span><br><span class="line">SHOW MASTER STATUS;</span><br><span class="line"></span><br><span class="line"># 查看当前mysql连接信息</span><br><span class="line">SHOW PROCESSLIST;</span><br><span class="line"></span><br><span class="line"># 开启从库同步</span><br><span class="line">START SLAVE;</span><br><span class="line"></span><br><span class="line"># 关闭从库同步</span><br><span class="line">STOP SLAVE;</span><br><span class="line"></span><br><span class="line"># 查看从节点同步情况,可以看到IO线程状态,没问题就可以在主库操作了</span><br><span class="line">SHOW SLAVE STATUS</span><br><span class="line"></span><br><span class="line"># 查看binlog 中记录的原始数据,这里的文件名因人而异</span><br><span class="line">mysqlbinlog --base64-output=decode-rows -v  mybin-bin.000001</span><br><span class="line"></span><br><span class="line"># 查询binlog 某个position的具体日志</span><br><span class="line">SHOW BINLOG EVENTS IN &#x27;mysql-bin.000001&#x27; FROM	2541 LIMIT 100;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p><em><strong>这里提供一些测试语句</strong></em></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"># 建库</span><br><span class="line"><span class="keyword">CREATE</span> DATABASE IF <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> test <span class="keyword">DEFAULT</span> <span class="type">CHARACTER</span> <span class="keyword">SET</span> <span class="operator">=</span> <span class="string">&#x27;utf8mb4&#x27;</span>;</span><br></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"># 建表</span><br><span class="line"><span class="keyword">CREATE</span> DATABASE test ;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SET</span> NAMES utf8mb4;</span><br><span class="line"><span class="keyword">SET</span> FOREIGN_KEY_CHECKS <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Table structure for tag</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `tag`;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `tag`  (</span><br><span class="line">  `id` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;主键id&#x27;</span>,</span><br><span class="line">  `type` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;标签类型,codelist &#x27;</span>,</span><br><span class="line">  `code` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;标签code,codelist &#x27;</span>,</span><br><span class="line">  `code_desc` <span class="type">varchar</span>(<span class="number">255</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8mb4 <span class="keyword">COLLATE</span> utf8mb4_bin <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;标签code描述信息&#x27;</span>,</span><br><span class="line">  `data_type` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;标签数据可选范围,codelist &#x27;</span>,</span><br><span class="line">  `create_time` datetime(<span class="number">0</span>) <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span>(<span class="number">0</span>) COMMENT <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">  `update_time` datetime(<span class="number">0</span>) <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span>(<span class="number">0</span>) <span class="keyword">ON</span> <span class="keyword">UPDATE</span> <span class="built_in">CURRENT_TIMESTAMP</span>(<span class="number">0</span>) COMMENT <span class="string">&#x27;更新时间&#x27;</span>,</span><br><span class="line">  `trace_id` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;skywalking traceId&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`) <span class="keyword">USING</span> BTREE</span><br><span class="line">) ENGINE <span class="operator">=</span> InnoDB AUTO_INCREMENT <span class="operator">=</span> <span class="number">235</span> <span class="type">CHARACTER</span> <span class="keyword">SET</span> <span class="operator">=</span> utf8mb4 <span class="keyword">COLLATE</span> <span class="operator">=</span> utf8mb4_bin ROW_FORMAT <span class="operator">=</span> <span class="keyword">Dynamic</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SET</span> FOREIGN_KEY_CHECKS <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 测试SQL</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `test`.`tag`(`type`, `code`, `code_desc`, `data_type`, `create_time`, `update_time`, `trace_id`) <span class="keyword">VALUES</span> ( <span class="number">1</span>, <span class="number">1222</span>, <span class="keyword">NULL</span>, <span class="keyword">NULL</span>, <span class="string">&#x27;2021-08-27 11:18:35&#x27;</span>, <span class="keyword">NULL</span>, <span class="keyword">NULL</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `test`.`tag`(`type`, `code`, `code_desc`, `data_type`, `create_time`, `update_time`, `trace_id`) <span class="keyword">VALUES</span> ( <span class="number">2</span>, <span class="number">1222</span>, <span class="string">&#x27;11&#x27;</span>, <span class="keyword">NULL</span>, <span class="string">&#x27;2021-08-27 11:41:35&#x27;</span>, <span class="keyword">NULL</span>, <span class="keyword">NULL</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `test`.`tag`(`type`, `code`, `code_desc`, `data_type`, `create_time`, `update_time`, `trace_id`) <span class="keyword">VALUES</span> ( <span class="number">2</span>, <span class="number">1222</span>, <span class="string">&#x27;11&#x27;</span>, <span class="keyword">NULL</span>, <span class="string">&#x27;2021-08-27 11:41:35&#x27;</span>, <span class="keyword">NULL</span>, <span class="keyword">NULL</span>),( <span class="number">2</span>, <span class="number">1222</span>, <span class="string">&#x27;11&#x27;</span>, <span class="keyword">NULL</span>, <span class="string">&#x27;2021-08-27 11:41:35&#x27;</span>, <span class="keyword">NULL</span>, <span class="keyword">NULL</span>);</span><br><span class="line"><span class="keyword">UPDATE</span> tag <span class="keyword">SET</span> code<span class="operator">=</span><span class="number">6</span> <span class="keyword">WHERE</span> id<span class="operator">&lt;=</span><span class="number">3</span>;</span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> tag <span class="keyword">WHERE</span> id<span class="operator">&lt;=</span><span class="number">2</span>;</span><br></pre></td></tr></table></figure>

<h3 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h3><h4 id="介绍几个安装常用的工具"><a href="#介绍几个安装常用的工具" class="headerlink" title="介绍几个安装常用的工具"></a>介绍几个安装常用的工具</h4><p>EveryThing/Geek/Mysql-Workbench</p>
]]></content>
      <categories>
        <category>编程开发</category>
      </categories>
      <tags>
        <tag>原创</tag>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo 写博文的一些组件使用示例</title>
    <url>/2022/01/01/blog-sample/</url>
    <content><![CDATA[<p>目前是使用markdown语言写博文,但是hexo还提供了一些额外的组件支持,下面我们一起来学习吧</p>
<span id="more"></span>
<h3 id="hexo-tag-plugn-示例"><a href="#hexo-tag-plugn-示例" class="headerlink" title="hexo tag plugn 示例"></a>hexo tag plugn 示例</h3><div class="note primary"><h4 id="这里是hexo-tabs-示例-可以参考使用"><a href="#这里是hexo-tabs-示例-可以参考使用" class="headerlink" title="这里是hexo tabs 示例 ,可以参考使用"></a><em><strong><a href="https://theme-next.js.org/docs/tag-plugins/tabs.html">这里是hexo tabs 示例 ,可以参考使用</a></strong></em></h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% tabs Fourth unique name %&#125;</span><br><span class="line">&lt;!-- tab Solution 1 --&gt;</span><br><span class="line">**This is Tab 1.**</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab Solution 2 --&gt;</span><br><span class="line">**This is Tab 2.**</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab Solution 3 --&gt;</span><br><span class="line">**This is Tab 3.**</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>

<div class="tabs" id="fourth-unique-name"><ul class="nav-tabs"><li class="tab active"><a href="#fourth-unique-name-1">Solution 1</a></li><li class="tab"><a href="#fourth-unique-name-2">Solution 2</a></li><li class="tab"><a href="#fourth-unique-name-3">Solution 3</a></li></ul><div class="tab-content"><div class="tab-pane active" id="fourth-unique-name-1"><p><strong>This is Tab 1.</strong></p></div><div class="tab-pane" id="fourth-unique-name-2"><p><strong>This is Tab 2.</strong></p></div><div class="tab-pane" id="fourth-unique-name-3"><p><strong>This is Tab 3.</strong></p></div></div></div>


<div class="note primary"><h4 id="这里是hexo-note-示例-可以参考使用"><a href="#这里是hexo-note-示例-可以参考使用" class="headerlink" title="这里是hexo note 示例 ,可以参考使用"></a><em><strong><a href="https://theme-next.js.org/docs/tag-plugins/note.html">这里是hexo note 示例 ,可以参考使用</a></strong></em></h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% note primary %&#125;</span><br><span class="line">#### Primary Header</span><br><span class="line">**Welcome** to [Hexo!](https://hexo.io)</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure></div>

<div class="note primary"><h4 id="Primary-Header"><a href="#Primary-Header" class="headerlink" title="Primary Header"></a>Primary Header</h4><p><strong>Welcome</strong> to <a href="https://hexo.io/">Hexo!</a></p>
</div>
]]></content>
      <tags>
        <tag>jdk1.8</tag>
      </tags>
  </entry>
  <entry>
    <title>plantuml</title>
    <url>/2022/01/01/plantuml/</url>
    <content><![CDATA[<h3 id="hexo集成使用plantuml功能"><a href="#hexo集成使用plantuml功能" class="headerlink" title="hexo集成使用plantuml功能"></a>hexo集成使用plantuml功能</h3><span id="more"></span>

<h3 id="说在开头的话"><a href="#说在开头的话" class="headerlink" title="说在开头的话"></a>说在开头的话</h3><p>在安装hexo的一些插件的时候,找到一款plantuml插件,终于不用在写文章的时候需要将写完的plantuml文件先生成图片再导入了,<br>现在可以直接在文章中写plantuml语法了. 这其中的原理看了一下大概就是生成加密的code然后在 <em><strong><a href="https://plantuml.com/zh/">plantuml</a></strong></em> 渲染得到图片</p>
<h3 id="这是一段plantuml语法示例"><a href="#这是一段plantuml语法示例" class="headerlink" title="这是一段plantuml语法示例"></a>这是一段plantuml语法示例</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@startuml</span><br><span class="line">title haizol-es-data-sync全量/增量更新时序图</span><br><span class="line">database haizol order 1000</span><br><span class="line"></span><br><span class="line">autonumber</span><br><span class="line">MQ-&gt; HaizolGroupMQListener: msg</span><br><span class="line">...</span><br><span class="line">HaizolGroupMQListener-&gt; DataSyncMQListener: super.handlerMessageExt</span><br><span class="line">DataSyncMQListener-&gt; DataSyncMQListener: handlerMessageExt</span><br><span class="line">DataSyncMQListener-&gt; DataSyncMQListener: executeSyncMethod</span><br><span class="line">DataSyncMQListener-&gt; DataSyncMQListener: executeSyncMethodDetail</span><br><span class="line">...</span><br><span class="line">DataSyncMQListener-&gt; HaizolHandler: invoke</span><br><span class="line">...</span><br><span class="line">HaizolHandler-&gt; AbstractEsSyncHandlerWorker: super.syncBatchByIds</span><br><span class="line">...</span><br><span class="line">AbstractEsSyncHandlerWorker-&gt; AbstractHaizolQueryWorker: listModels</span><br><span class="line">...</span><br><span class="line">AbstractHaizolQueryWorker-&gt; AbstractHaizolSyncBaseMapperWorker: listModels</span><br><span class="line">...</span><br><span class="line">AbstractHaizolSyncBaseMapperWorker-&gt;haizol : listModels</span><br><span class="line">...</span><br><span class="line">haizol --&gt; AbstractHaizolQuery :List&lt;M&gt;</span><br><span class="line">AbstractHaizolQueryWorker-&gt; AbstractHaizolQuery: doWork</span><br><span class="line">AbstractHaizolQuery-&gt; AbstractHaizolQuery: doWorkerBefore</span><br><span class="line">loop n </span><br><span class="line">AbstractHaizolQuery --&gt; HaizolQuery: &lt;callback&gt;</span><br><span class="line">HaizolQuery-&gt; java.util.Function:apply</span><br><span class="line">java.util.Function-&gt; java.util.Function:void</span><br><span class="line">end</span><br><span class="line">java.util.Function-&gt;  HaizolQuery: &lt;callback&gt;</span><br><span class="line">AbstractHaizolQuery-&gt; AbstractHaizolQuery: doWorkerAfter</span><br><span class="line">...</span><br><span class="line">AbstractHaizolQuery-&gt; AbstractHaizolQueryWorker: List&lt;M&gt;</span><br><span class="line">...</span><br><span class="line">AbstractHaizolQueryWorker-&gt; AbstractEsSyncHandlerWorker: List&lt;M&gt;</span><br><span class="line">...</span><br><span class="line">AbstractEsSyncHandlerWorker-&gt; HaizolHandler: List&lt;M&gt;</span><br><span class="line">...</span><br><span class="line">HaizolHandler-&gt; AbstractEsSyncHandlerWorker: &lt;saveToEs&gt;</span><br><span class="line">...</span><br><span class="line">AbstractEsSyncHandlerWorker-&gt; AbstractEsSyncHandlerWorker:java.util.Future#get</span><br><span class="line">@enduml</span><br></pre></td></tr></table></figure>
<p>这将直接得到和  <em><strong><a href="https://plantuml.com/zh/">plantuml</a></strong></em> 生成的一模一样的 <em><strong>svg</strong></em> 图片</p>
<img  data-src=http://www.plantuml.com/plantuml/svg/fPI_JYCn4CPxFuKbwbroxIgA82879zqM4ITHJzP3iiInL_Ou8lJeIZeeaAwuYf82KL3mDebqRt7UJI8sjqu4HxMIPtwVFy-VFR04Xjn4Cif98Xz1VgLbX3OIG13PcShcrmz_Vjxipt__yf_5_TFYzd5nzpn_kPdVlx8oQm1s3N9j11h-fTLgCGQEj7AJ0HgMzgCEFwbIZersHTh_dbj2XIRX4pjaSHopODXZH_wAK--ZpbXNe8b7e8H4awArCCJU9R5cxXQ1Jw1uYPaZh8wHHbfy0Zr2WbnMpm-AB6joiZIRy5nDzHXhrLf5VERXm9A1Z7gs55cTdsapVYjNsSmkK3Rgphu9Mwdie6gQoxlw3irihIYznrGBb9iwZSo6ocbbmc8AHV5cSATS28awgu5hiAlpAEoV9sLrssdd0vQhMCA5BkCXRZU1feldsY2JMXTSyP12PNU3RMSWvG2oSOTjtdG1KuWTvJB-wbH6kLQ9hukSiMOWd3tLkM2eH1ZOwk8_tdruJdxtjyp7xlbQT-czmnKS-v18UDB_sRCw-A55QrkOuW_Tiqls_IiMKgltXvp1lI4IE_2Tyx_hlm00>]]></content>
      <tags>
        <tag>plantuml</tag>
      </tags>
  </entry>
  <entry>
    <title>SSH方式访问Github</title>
    <url>/2022/07/20/github-ssh-key/</url>
    <content><![CDATA[<p>近期由于更换新电脑,疲于频繁在git操作输入用户名和密码,遂使用SSH方式读写github</p>
<span id="more"></span>

<div class="tabs" id="fifth-unique-name"><ul class="nav-tabs"><li class="tab active"><a href="#fifth-unique-name-1">第一步</a></li><li class="tab"><a href="#fifth-unique-name-2">第二步</a></li><li class="tab"><a href="#fifth-unique-name-3">第三步</a></li></ul><div class="tab-content"><div class="tab-pane active" id="fifth-unique-name-1"><p>打开 git bash<br>#查询<br>git config user.name<br>#配置<br>git config –global user.name ‘xxxxx’ </p>
<p>#查询<br>git config user.email<br>git config –global user.email ‘<a href="mailto:&#x78;&#120;&#x78;&#x40;&#x78;&#120;&#46;&#x78;&#x78;&#120;">&#x78;&#120;&#x78;&#x40;&#x78;&#120;&#46;&#x78;&#x78;&#120;</a>’</p>
<p>#生成key<br>ssh-keygen -t rsa -C ‘上面的邮箱’<br>需要按几次空格生成key<br>在.ssh目录下得到了两个文件：id_rsa（私有秘钥）和id_rsa.pub（公有密钥）</p></div><div class="tab-pane" id="fifth-unique-name-2"><p>#配置到github中<br>去.ssh目录下找到id_rsa.pub这个文件夹打开复制全部内容。<br>粘贴到<a href="https://github.com/settings/keys">https://github.com/settings/keys</a></p></div><div class="tab-pane" id="fifth-unique-name-3"><p>#最后一步<br>ssh -T <a href="mailto:&#103;&#105;&#116;&#64;&#103;&#105;&#x74;&#104;&#117;&#98;&#46;&#x63;&#111;&#x6d;">&#103;&#105;&#116;&#64;&#103;&#105;&#x74;&#104;&#117;&#98;&#46;&#x63;&#111;&#x6d;</a><br>提示成功就可以搞定了</p></div></div></div>









]]></content>
      <categories>
        <category>github</category>
      </categories>
      <tags>
        <tag>原创</tag>
      </tags>
  </entry>
  <entry>
    <title>关于学习技术知识时的一些想法</title>
    <url>/2022/01/02/study-and-association/</url>
    <content><![CDATA[<p>今天在家里学习的时候,突然有一些念头在脑中一闪而过,其实在很早之前就有过能将这些瞬间记录的想法,但是因为lan而不了了之,趁着有时间就记录一下</p>
<span id="more"></span>

<div class="note primary"><h4 id="说在开头的话"><a href="#说在开头的话" class="headerlink" title="说在开头的话"></a>说在开头的话</h4><pre><code>今天是2022年1月2日,天气晴朗,周日,元旦假期的第二天,在上海闵行.
下午在B站学习ShardingSphere知识时,由于我在观看此类视频时,都会本着按需所取的原则,会习惯性扫一眼目录这些信息
想着通过目录其实就能知道大概下面准备学的是否会符合自己的技术栈路线中或者所需知识点范围内
</code></pre>
</div>

<div class="note info"><h4 id="一点点思考"><a href="#一点点思考" class="headerlink" title="一点点思考"></a>一点点思考</h4><pre><code>是否有必要在学习这类知识或者技术时有必要从完整的概念性知识开始?
因为可能考虑到其中有些版本差异原因?    或者说学习者学习能力差异?
我认为能点开这类技术性知识学习视频都是在有一点了解前提下来学习自己不知道的知识,这点可以通过翻一下目录就能知道这些知识&quot;我&quot;是否知道
</code></pre>
</div>

<div class="note info"><h4 id="联想的一点点思考"><a href="#联想的一点点思考" class="headerlink" title="联想的一点点思考"></a>联想的一点点思考</h4><pre><code>由公司在用的一款proxy-tool工具想到其实这就有点像一个网关功能
这里再多说一句关于proxy-tool,里面应该还用到了DNS等技术
因为同一个域名,同账号密码下可达到动态环境切换的功能,说实话很实用
但是可能还有一些其他技术,不太了解,所以不知道
</code></pre>
</div>

<div class="note warning"><h4 id="一点点反思"><a href="#一点点反思" class="headerlink" title="一点点反思"></a>一点点反思</h4><pre><code>这里是否就是因为知识的广度不够,导致的认知不足问题?
</code></pre>
</div>

<div class="note success"><h4 id="扩展的知识点"><a href="#扩展的知识点" class="headerlink" title="扩展的知识点"></a>扩展的知识点</h4><pre><code>接下来思考过程中,念头一过记录几个知识点,以后应该会用得到
1. 在开发Java应用,定义log时,可以为每一个log配置一个String的name,在外部就可以动态的通过app 参数或者说vm参数对该log动态开启/调整log level等功能
2. -D是用在参数上时,需要加到vm参数才会生效
3. 而在SpringBoot应用中,可以使用LogSystem即可动态开启log/调整log level的功能
</code></pre>
</div>
]]></content>
      <categories>
        <category>开发技术</category>
        <category>思考感悟</category>
      </categories>
      <tags>
        <tag>原创</tag>
        <tag>spring</tag>
      </tags>
  </entry>
  <entry>
    <title>test</title>
    <url>/2021/12/31/test/</url>
    <content><![CDATA[<p>最近在做关于canal同步ES数据迁移项目的一些笔记与心得</p>
<span id="more"></span>
<h2 id="一些关于项目的答疑"><a href="#一些关于项目的答疑" class="headerlink" title="一些关于项目的答疑"></a>一些关于项目的答疑</h2><ol>
<li><p>关于IndexSyncBatchModel中mode语义声明?</p>
<ol>
<li>为了保持与main-task中全量/增量更新时指向不同的逻辑语义一致,这里的mode值声明依赖查询全量时的定义</li>
<li><div style='color:red'>com.haizol.data.sync.query.AbstractHaizolQueryWorker.queryIndexRecords(long, long)
    定义mode =1 就是全量
</div></li>
</ol>
</li>
<li><p>关于FullIndexModel中String id声明及类名答疑?</p>
<ol>
<li>类名答疑:由于版本原因等因素,类名语义表示是全量更新时的语义,在增量逻辑进入该项目时未及时更新导致</li>
<li>字段答疑:由于全量更新需要唯一 “_id” 等因素,早期表id主键表示ES中”_id”语义,增量逻辑进入该项目时新增了”docId”可表示”_id”,这里未及时更新</li>
</ol>
</li>
<li><p>关于索引名未统一问题答疑?</p>
<ol>
<li>在main-task中由于历史书写等因素,在确定索引名时考量可外部配置,也未考虑到统一问题</li>
<li>由于在xx-data-service中以明确使用由main-task定义的索引名,这里暂时无法做到统一,后期的indexName和mappingName以定义规则,期望后续索引可以统一,如”haizol_”开头</li>
</ol>
</li>
<li><p>关于Handler中方法名以表名的答疑?</p>
<ol>
<li>在handler中维护以表名监听的增量的处理逻辑,当以表名表示方法名时,可以直观看到当前索引关注的表</li>
</ol>
</li>
<li><p>关于项目中 AbstractDataSyncMQListener部分方法解释说明?</p>
<ol>
<li>getMQTag 直接定义不再额外关注表的问题,在handler中以具体声明关注的表</li>
<li>syncExecutor 关于额外定义线程池是在消费线程处理完后增量入库的逻辑交给该线程池,提前解除对消费线程的占用,达到更快速的线程切换</li>
</ol>
</li>
<li><p>关于Model/Handler/Query/Mapper/Mapping 定义规则</p>
<ol>
<li>以Haizol{Mapping}XXX声明</li>
</ol>
</li>
</ol>
<h2 id="关于HaizolQuery中定义Bean时的注意事项"><a href="#关于HaizolQuery中定义Bean时的注意事项" class="headerlink" title="关于HaizolQuery中定义Bean时的注意事项"></a>关于HaizolQuery中定义Bean时的注意事项</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">在此说明下该文档的缘由,截止2021-12-21版本背景是迁移main-task</span><br><span class="line">在迁移过程中发现很多索引存在调公用方法查询数据的地方,迁移过来后方法名保持语义一般未做改动</span><br><span class="line">在新的的版本中,我们使用了并行的方式处理原先串行方法调用时遇到的问题</span><br><span class="line">那么就有以下需要解决的问题,后续在维护的时候避免掉就可以不用该规则,但是还是得注意</span><br><span class="line">在xxQuery中我们使用了 @Bean 结合java.util.function.Function&lt;T, R&gt;生成了匿名的Bean实例</span><br><span class="line">在Spring容器中未指定beanName时默认以methodName为beanName注册为bean</span><br><span class="line">若beanName定义重复时会存在BeanDefinition覆盖的问题</span><br><span class="line">	详见org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(String, BeanDefinition)</span><br><span class="line">那么就要求我们在声明以@Bean标记的方法Bean时,需要有唯一的规则</span><br><span class="line">这里当前使用的规则是methodName$$xxx</span><br></pre></td></tr></table></figure>

<h3 id="声明bean示例"><a href="#声明bean示例" class="headerlink" title="声明bean示例"></a>声明bean示例</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">com.haizol.data.sync.query.HaizolEdmLeadsQuery.listCompContracts$$HaizolEdmLeads</span><br><span class="line">com.haizol.data.sync.query.HaizolLeadsQuery.queryLeadsTransferList$$HaizolLeads</span><br></pre></td></tr></table></figure>

<h3 id="spring-Overriding日志-这里在解决Bean重复时留意该日志"><a href="#spring-Overriding日志-这里在解决Bean重复时留意该日志" class="headerlink" title="spring Overriding日志 这里在解决Bean重复时留意该日志"></a>spring Overriding日志 这里在解决Bean重复时留意该日志</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">2021</span>-<span class="number">12</span>-<span class="number">21</span> <span class="number">14</span>:<span class="number">40</span>:<span class="number">42.836</span> - INFO -  --- [main] o.s.b.f.s.DefaultListableBeanFactory    [<span class="number">828</span>]  : Overriding bean definition <span class="keyword">for</span> bean <span class="string">&#x27;queryLeadsSystemNotes&#x27;</span> with a different definition: replacing [Root bean: class [<span class="literal">null</span>]; scope=; <span class="keyword">abstract</span>=<span class="literal">false</span>; lazyInit=<span class="literal">false</span>; autowireMode=<span class="number">3</span>; dependencyCheck=<span class="number">0</span>; autowireCandidate=<span class="literal">true</span>; primary=<span class="literal">false</span>; factoryBeanName=haizolChinaBuyerQuery; factoryMethodName=queryLeadsSystemNotes; initMethodName=<span class="literal">null</span>; destroyMethodName=(inferred); defined in <span class="keyword">class</span> <span class="title class_">path</span> resource [com/haizol/data/sync/query/HaizolChinaBuyerQuery.class]] with [Root bean: class [<span class="literal">null</span>]; scope=; <span class="keyword">abstract</span>=<span class="literal">false</span>; lazyInit=<span class="literal">false</span>; autowireMode=<span class="number">3</span>; dependencyCheck=<span class="number">0</span>; autowireCandidate=<span class="literal">true</span>; primary=<span class="literal">false</span>; factoryBeanName=haizolLeadsQuery; factoryMethodName=queryLeadsSystemNotes; initMethodName=<span class="literal">null</span>; destroyMethodName=(inferred); defined in <span class="keyword">class</span> <span class="title class_">path</span> resource [com/haizol/data/sync/query/HaizolLeadsQuery.class]]</span><br><span class="line"></span><br><span class="line"><span class="number">2021</span>-<span class="number">12</span>-<span class="number">21</span> <span class="number">14</span>:<span class="number">40</span>:<span class="number">57.867</span> - INFO -  --- [main] o.s.b.f.s.DefaultListableBeanFactory    [<span class="number">828</span>]  : Overriding bean definition <span class="keyword">for</span> bean <span class="string">&#x27;queryLeadsTransferList&#x27;</span> with a different definition: replacing [Root bean: class [<span class="literal">null</span>]; scope=; <span class="keyword">abstract</span>=<span class="literal">false</span>; lazyInit=<span class="literal">false</span>; autowireMode=<span class="number">3</span>; dependencyCheck=<span class="number">0</span>; autowireCandidate=<span class="literal">true</span>; primary=<span class="literal">false</span>; factoryBeanName=haizolChinaBuyerQuery; factoryMethodName=queryLeadsTransferList; initMethodName=<span class="literal">null</span>; destroyMethodName=(inferred); defined in <span class="keyword">class</span> <span class="title class_">path</span> resource [com/haizol/data/sync/query/HaizolChinaBuyerQuery.class]] with [Root bean: class [<span class="literal">null</span>]; scope=; <span class="keyword">abstract</span>=<span class="literal">false</span>; lazyInit=<span class="literal">false</span>; autowireMode=<span class="number">3</span>; dependencyCheck=<span class="number">0</span>; autowireCandidate=<span class="literal">true</span>; primary=<span class="literal">false</span>; factoryBeanName=haizolLeadsQuery; factoryMethodName=queryLeadsTransferList; initMethodName=<span class="literal">null</span>; destroyMethodName=(inferred); defined in <span class="keyword">class</span> <span class="title class_">path</span> resource [com/haizol/data/sync/query/HaizolLeadsQuery.class]]</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="所用关键框架-技术"><a href="#所用关键框架-技术" class="headerlink" title="所用关键框架/技术"></a>所用关键框架/技术</h2><table>
<thead>
<tr>
<th>框架/技术</th>
<th>版本</th>
</tr>
</thead>
<tbody><tr>
<td>jdk</td>
<td>1.8</td>
</tr>
<tr>
<td>Spring</td>
<td>4.3.12.RELEASE</td>
</tr>
<tr>
<td>Spring-Boot</td>
<td>1.5.8.RELEASE</td>
</tr>
<tr>
<td><del>ElasticSearch</del></td>
<td><del>7.1.0</del>  (由es-data-commons操作)</td>
</tr>
<tr>
<td>druid</td>
<td>1.1.12</td>
</tr>
<tr>
<td>rocketmq</td>
<td>4.1.0-incubating</td>
</tr>
<tr>
<td>canal</td>
<td>1.0.24</td>
</tr>
<tr>
<td>设计模式</td>
<td>如模板方法设计模式/策略模式</td>
</tr>
<tr>
<td>JDK1.8 Stream</td>
<td>如groupingBy/collectingAndThen/maxBy/max/mapping</td>
</tr>
<tr>
<td>JUC</td>
<td>如CompletableFuture/Executor/</td>
</tr>
<tr>
<td>Spring 进阶技术</td>
<td>如ImportBeanDefinitionRegistrar回调使用场景</td>
</tr>
<tr>
<td>Spring-Boot进阶技术</td>
<td>如EnvironmentPostProcessor回调使用场景</td>
</tr>
</tbody></table>
<h2 id="haizol-es-data-sync全量-增量更新时序图"><a href="#haizol-es-data-sync全量-增量更新时序图" class="headerlink" title="haizol-es-data-sync全量/增量更新时序图"></a>haizol-es-data-sync全量/增量更新时序图</h2><img data-src="/2021/12/31/test/diagram.svg" class="">

<h2 id="项目结构类图-无关联关系"><a href="#项目结构类图-无关联关系" class="headerlink" title="项目结构类图(无关联关系)"></a>项目结构类图(无关联关系)</h2><img data-src="/2021/12/31/test/uml3.svg" class="">

<h2 id="项目结构类图-含示例及关联关系"><a href="#项目结构类图-含示例及关联关系" class="headerlink" title="项目结构类图(含示例及关联关系)"></a>项目结构类图(含示例及关联关系)</h2><img data-src="/2021/12/31/test/uml4.svg" class="">

<h2 id="JDK1-8-Stream-API-代码片段"><a href="#JDK1-8-Stream-API-代码片段" class="headerlink" title="JDK1.8 Stream API 代码片段"></a>JDK1.8 Stream API 代码片段</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//com.haizol.data.sync.query.HaizolPaidSupplierQuery.listAwardForPaidSupplier()</span></span><br><span class="line"><span class="comment">// @formatter:off</span></span><br><span class="line"><span class="comment">// 将最近授盘时间写入</span></span><br><span class="line">list.stream().filter(Objects::nonNull)</span><br><span class="line">	.filter(HaizolStreamUtils.equals(HaizolAwardModel::getAuditState, <span class="number">1</span>))</span><br><span class="line">	.filter(HaizolStreamUtils.equals(HaizolAwardModel::getAwardListStatus, <span class="number">0</span>))</span><br><span class="line">	.filter(HaizolStreamUtils.equals(HaizolAwardModel::getIsDel, <span class="number">0</span>))</span><br><span class="line">	.max(comparing(HaizolAwardModel::getAwardTime))</span><br><span class="line">	.ifPresent(d-&gt;v.setLastAwardTime(d.getAwardTime()));</span><br><span class="line"><span class="comment">// @formatter:on</span></span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//com.haizol.data.sync.query.HaizolManageQuery.listRecentDynamicRegDate()		</span></span><br><span class="line"><span class="comment">// 合并取最大值</span></span><br><span class="line">Map&lt;String, DateDTO&gt; maps3 = Arrays.asList(maps1.values(), maps2.values()).stream()</span><br><span class="line">		.flatMap(Collection::stream).collect(groupingBy(DateDTO::getCid,</span><br><span class="line">				collectingAndThen(maxBy(comparing(DateDTO::getDate)), Optional::get)));</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// com.haizol.data.sync.query.HaizolManageQuery.queryMatchBusinessTag()</span></span><br><span class="line">Map&lt;String, List&lt;Long&gt;&gt; maps2 = matchTagList.stream()</span><br><span class="line">    .collect(groupingBy(MatchBusinessTagDTO::getSupplierCompId, mapping(MatchBusinessTagDTO::getTagId, toList())));</span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>开发技术</category>
      </categories>
      <tags>
        <tag>jdk1.8</tag>
        <tag>spring</tag>
        <tag>spring-boot</tag>
      </tags>
  </entry>
  <entry>
    <title>夜公园回来啦！今天起，闵行49座城市公园开放时间恢复至疫情前</title>
    <url>/2022/07/20/shanghai-park/</url>
    <content><![CDATA[<p>进入夏季，迎来了荷花和向日葵的盛放,草木葱茏，荷叶莲莲，这个季节的公园是不是沁人心脾美不胜收？</p>
<span id="more"></span>
<p>记者从区绿容局所获悉，因疫情缩短开放时间的城市公园，7月15日起恢复原先开放时间。49座城市公园中除部分开放式（无围墙）公园24小时开放外，市民喜爱的夜公园也回来了：它们多数早5点开园，晚9点闭园。</p>
<p>园方提醒，开园时间延长，防疫标准不降，入园须持绿码且持72小时核酸阴性报告或24小时内核酸采样证明；疫情防控期间公园内禁止开展广场舞、交谊舞、大合唱、健身操、打牌、下棋等聚集性活动。</p>
<table>
<thead>
<tr>
<th>序号</th>
<th>公园名称</th>
<th>地址</th>
<th>开放时间</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>闵行体育公园</td>
<td>新浪路 456 号</td>
<td>5:00-21:00</td>
<td>20:30 分后禁止入园</td>
</tr>
<tr>
<td>2</td>
<td>莘庄公园</td>
<td>莘浜路 421 号</td>
<td>5:00-21:00</td>
<td>20:30 分后禁止入园</td>
</tr>
<tr>
<td>3</td>
<td>闵行公园</td>
<td>沪闵路 249 号</td>
<td>5:00-21:00</td>
<td>20:30 分后禁止入园</td>
</tr>
<tr>
<td>4</td>
<td>闵行文化公园</td>
<td>吴中路 2019 号</td>
<td>5:00-21:00</td>
<td>20:30 分后禁止入园</td>
</tr>
<tr>
<td>5</td>
<td>莘庄梅园</td>
<td>虹萃路 688 号</td>
<td>5:00-21:00</td>
<td>20:30 分后禁止入园</td>
</tr>
<tr>
<td>6</td>
<td>黎安公园</td>
<td>秀文路 118 号</td>
<td>5:00-21:00</td>
<td>20:30 分后禁止入园</td>
</tr>
<tr>
<td>7</td>
<td>古窿园</td>
<td>临沧路 148 号</td>
<td>6:00-18:00</td>
<td>20:30 分后禁止入园</td>
</tr>
<tr>
<td>8</td>
<td>上海红园</td>
<td>江川路 354 号</td>
<td>5:00-21:00</td>
<td>20:30 分后禁止入园</td>
</tr>
<tr>
<td>9</td>
<td>吴泾公园</td>
<td>剑川路 2 号</td>
<td>5:00-21:00</td>
<td>20:30 分后禁止入园</td>
</tr>
<tr>
<td>10</td>
<td>航华公园</td>
<td>航新路 600 号</td>
<td>5:00-21:00</td>
<td>20:30 分后禁止入园</td>
</tr>
<tr>
<td>11</td>
<td>华漕公园</td>
<td>东华美路 5 号</td>
<td>5:00-21:00</td>
<td>20:30 分后禁止入园</td>
</tr>
<tr>
<td>12</td>
<td>华翔绿地</td>
<td>申昆路（北）291 号</td>
<td>5:00-21:00</td>
<td>20:30 分后禁止入园</td>
</tr>
<tr>
<td>13</td>
<td>纪王公园</td>
<td>纪高路 598 号</td>
<td>5:00-21:00</td>
<td>20:30 分后禁止入园</td>
</tr>
<tr>
<td>14</td>
<td>诸翟公园</td>
<td>运乐路 188 号</td>
<td>5:00-21:00</td>
<td>20:30 分后禁止入园</td>
</tr>
<tr>
<td>15</td>
<td>梅陇休闲苑</td>
<td>滇西路 550 号</td>
<td>6:00-20:00</td>
<td>19： 30 分后禁止入园</td>
</tr>
<tr>
<td>16</td>
<td>梅陇公园</td>
<td>上中西路 780 号</td>
<td>6:00-21:00</td>
<td>20:30 分后禁止入园</td>
</tr>
<tr>
<td>17</td>
<td>梅馨陇韵</td>
<td>曙东路东马西浜北</td>
<td>6:00-21:00</td>
<td>20:30 分后禁止入园</td>
</tr>
<tr>
<td>18</td>
<td>水生园</td>
<td>东川路 3366 号</td>
<td>5:00-19:00</td>
<td></td>
</tr>
<tr>
<td>19</td>
<td>西洋园</td>
<td>东川路 3366 号</td>
<td>5:00-19:00</td>
<td></td>
</tr>
<tr>
<td>20</td>
<td>金虹桥公园</td>
<td>合川路 2899 号</td>
<td>5:00-21:00</td>
<td>20:30 分后禁止入园</td>
</tr>
<tr>
<td>21</td>
<td>陈行公园</td>
<td>浦星路西、陈南路南</td>
<td>7 月-9 月 5:00-19:00</td>
<td></td>
</tr>
<tr>
<td>22</td>
<td>田园</td>
<td>梅州路 445 号</td>
<td>5:00-21:00</td>
<td>20:30 分后禁止入园</td>
</tr>
<tr>
<td>23</td>
<td>金塔公园</td>
<td>金塔路 599 号</td>
<td>5:00-21:00</td>
<td>20:30 分后禁止入园</td>
</tr>
<tr>
<td>24</td>
<td>裁桥剪纸公园</td>
<td>老沪闽路口（轻轨五号线 裁桥站）</td>
<td>全天</td>
<td></td>
</tr>
<tr>
<td>25</td>
<td>裁联休闲公园</td>
<td>轻轨 5 号线裁桥南、沪闵 路东、横沥江西</td>
<td>全天</td>
<td></td>
</tr>
<tr>
<td>26</td>
<td>银都绿地</td>
<td>银都路南侧、地铁 5 号线 东侧、横泾河西侧</td>
<td>全天</td>
<td></td>
</tr>
<tr>
<td>27</td>
<td>平阳双拥公园</td>
<td>龙茗路西、平阳路南</td>
<td>全天</td>
<td></td>
</tr>
<tr>
<td>28</td>
<td>景谷园</td>
<td>碧江路西景谷路北</td>
<td>全天</td>
<td></td>
</tr>
<tr>
<td>29</td>
<td>新华园</td>
<td>瑞丽路西宾川路北</td>
<td>全天</td>
<td></td>
</tr>
<tr>
<td>30</td>
<td>莘城中央公园</td>
<td>闽城路 180 号</td>
<td>5:00-21:00</td>
<td></td>
</tr>
<tr>
<td>31</td>
<td>马桥公园</td>
<td>北松路富岩路口</td>
<td>全天</td>
<td></td>
</tr>
<tr>
<td>32</td>
<td>浦江第一湾公园</td>
<td>紫星路江川东路（紫星 路往南到底）</td>
<td>6:00-18:00</td>
<td></td>
</tr>
<tr>
<td>33</td>
<td>江玮绿地</td>
<td>江文路江玮路口</td>
<td>全天</td>
<td></td>
</tr>
<tr>
<td>34</td>
<td>锦博苑</td>
<td>江龙路 188 号</td>
<td>全天</td>
<td></td>
</tr>
<tr>
<td>35</td>
<td>锦园</td>
<td>浦锦路西侧、江园路南 侧、联航路北侧</td>
<td>全天</td>
<td></td>
</tr>
<tr>
<td>36</td>
<td>浦康路休闲公园</td>
<td>浦星公路西侧（江桦路-陈南路）</td>
<td>全天</td>
<td></td>
</tr>
<tr>
<td>37</td>
<td>锦怡园</td>
<td>沈庄塘南侧（浦申南路 –浦锦南路段）</td>
<td>全天</td>
<td></td>
</tr>
<tr>
<td>38</td>
<td>锦绣园</td>
<td>江龙路南侧（浦瑞路 –浦锦南路）</td>
<td>全天</td>
<td></td>
</tr>
<tr>
<td>39</td>
<td>丁连村民公园</td>
<td>浦锦街道丁连村</td>
<td>全天</td>
<td></td>
</tr>
<tr>
<td>40</td>
<td>美树里</td>
<td>浦秀路（立跃路一一江 洲路）</td>
<td>全天</td>
<td></td>
</tr>
<tr>
<td>41</td>
<td>锦逸园</td>
<td>浦锦路（江月路一一北 江燕路）</td>
<td>全天</td>
<td></td>
</tr>
<tr>
<td>42</td>
<td>南外潇公园</td>
<td>浦江路沪闽路西北角</td>
<td>全天</td>
<td></td>
</tr>
<tr>
<td>43</td>
<td>裁桥公园</td>
<td>裁盛路 525 号</td>
<td>5:00-21:00</td>
<td>20:30 分后禁止入园</td>
</tr>
<tr>
<td>44</td>
<td>梅陇国防教育主题公园</td>
<td>金都路 1489 号</td>
<td>6:00-21:00</td>
<td>20:30 分后禁止入园</td>
</tr>
<tr>
<td>45</td>
<td>虹濯公园</td>
<td>万源路东，蒲汇塘南</td>
<td>5:00-21:00</td>
<td>20:30 分后禁止入园</td>
</tr>
<tr>
<td>46</td>
<td>锦溪园</td>
<td>浦星公路西侧（竹园西 路-昌妹路）</td>
<td>全天</td>
<td></td>
</tr>
<tr>
<td>47</td>
<td>锦和园</td>
<td>浦锦路西、南江洲路南</td>
<td>全天</td>
<td></td>
</tr>
<tr>
<td>48</td>
<td>锦心园</td>
<td>浦锦路东、江月路南</td>
<td>全天</td>
<td></td>
</tr>
<tr>
<td>49</td>
<td>古美公园</td>
<td>合川路、平吉路东南角</td>
<td>5:00-21:00</td>
<td>20:30 分后禁止入园</td>
</tr>
</tbody></table>
]]></content>
      <tags>
        <tag>原创</tag>
      </tags>
  </entry>
</search>
